#pragma kernel CSMain

int _CellCount;
int _TextureSize;
float _MapSize;
float _Radius;
float _Blend;

StructuredBuffer<float> _CellBuffer;
RWTexture2D<float4> _Mask;

[numthreads(8,8,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    _Mask[id.xy] = float4(0, 0, 0, 1);
    for (int i = 0; i < _CellCount; i++)
    {
        float2 UVPos = id.xy / (float)_TextureSize;
        float2 centerUVPos = float2(_CellBuffer[3 * i], _CellBuffer[3 * i + 1]) / _MapSize;
        float UVDistance = length(UVPos - centerUVPos);

        float val = smoothstep(_Radius + _Blend, _Radius, UVDistance) * _CellBuffer[3 * i + 2];
        val = max(_Mask[id.xy].r, val);

        _Mask[id.xy] = float4(val, val, val, 1);
    }
}
